import os
import logging
from telegram import Update, ChatMember
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
    ChatMemberHandler,
)
import openai
import asyncio

# Si usas Jupyter u otro entorno que ya tenga event loop corriendo, descomenta la l√≠nea siguiente
# import nest_asyncio; nest_asyncio.apply()

# Configura la API key de OpenAI y el token de Telegram bot desde variables de entorno
openai.api_key = os.getenv("OPENAI_API_KEY")
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# Configura logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

WELCOME_MESSAGE = """
üôå ¬°Qu√© bueno tenerte aqu√≠!
Este grupo es para jugadores que quieren aprovechar todos los beneficios de Fun88 Chile.
üí¨ Comparte tus jugadas
üéÅ Reclama tus bonos
üì≤ Revisa nuestras promociones: https://www.fun88chile.com/promotions

Para empezar, dime: ¬øQu√© tipo de bonos te gustan m√°s?
üé∞ Tragamonedas / ‚öΩ Deportes / üÉè Casino en Vivo
"""

RESPUESTAS = {
    "c√≥mo deposito": """üí∞ ¬øC√≥mo hacer un dep√≥sito en Fun88?

1. Inicia sesi√≥n en tu cuenta.
2. Haz clic en ‚ÄúDep√≥sito‚Äù.
3. Elige tu m√©todo de pago.
4. Ingresa el monto (m√≠nimo $1.000 CLP).
5. Confirma y listo. ¬°Empieza a jugar!""",
    "c√≥mo retiro": """üè¶ ¬øC√≥mo retirar tus ganancias?

1. Inicia sesi√≥n en tu cuenta.
2. Haz clic en ‚ÄúMi cuenta‚Äù > ‚ÄúRetirar‚Äù.
3. Elige tu m√©todo (el mismo con el que depositaste).
4. Ingresa monto (m√°ximo $9.000.000 CLP).
5. Confirma y espera aprobaci√≥n.""",
    "bono": "üéÅ Puedes revisar los bonos disponibles aqu√≠: https://www.fun88chile.com/promotions",
}

# Handler para /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(WELCOME_MESSAGE)

# Handler para responder texto con respuestas predefinidas o IA
async def responder(update: Update, context: ContextTypes.DEFAULT_TYPE):
    mensaje = update.message.text.lower()

    for clave, respuesta in RESPUESTAS.items():
        if clave in mensaje:
            await update.message.reply_text(respuesta)
            return

    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "Act√∫a como asistente de soporte de Fun88 Chile."},
                {"role": "user", "content": mensaje}
            ],
            max_tokens=150,
            n=1,
            stop=None,
            temperature=0.7,
        )
        reply = response.choices[0].message.content
        await update.message.reply_text(reply)
    except Exception as e:
        logger.error(f"Error con OpenAI: {e}")
        await update.message.reply_text("Lo siento, no puedo responder eso ahora.")

# Handler para saludar nuevos miembros
async def greet_new_member(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.chat_member.new_chat_members:
        for member in update.chat_member.new_chat_members:
            # Ignora bots si quieres:
            if member.is_bot:
                continue
            await context.bot.send_message(
                chat_id=update.chat_member.chat.id,
                text=f"¬°Hola {member.full_name}! {WELCOME_MESSAGE}"
            )

async def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), responder))
    app.add_handler(ChatMemberHandler(greet_new_member, ChatMemberHandler.CHAT_MEMBER))

    logger.info("Bot iniciado con √©xito.")
    await app.run_polling()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except RuntimeError as e:
        # En caso de event loop ya corriendo (por ejemplo en Jupyter)
        logger.warning(f"RuntimeError al ejecutar asyncio.run(): {e}")
